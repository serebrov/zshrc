" vim: filetype=vifm :
" Sample configuration file for vifm on OSX (last updated: 2 June, 2019)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------

" Command used to edit files in various contexts.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

set vicmd=nvim
" set vicmd=vim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

" set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Selected color scheme

" colorscheme Default
" colorscheme snowwhite
colorscheme paper
" colorscheme mc

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do too many requests to slow file systems

set slowfs=curlftpfs

" Set custom status line look

set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

highlight User1 ctermbg=yellow ctermfg=white
highlight User2 ctermbg=blue ctermfg=white cterm=bold
highlight User3 ctermbg=red ctermfg=white cterm=bold
highlight User4 ctermbg=none ctermfg=yellow cterm=bold
highlight User5 ctermbg=purple ctermfg=white

" Set custom status line look
" set statusline="%1* %-10t %2* owner:%u:%-7g %5* size:%s %N %3* attr:%A %4* %20d "

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark b ~/bin/
mark h ~/
mark w ~/web
mark d ~/Downloads

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! reload :write | restart
" command! pv sxiv -tr %d

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" Spaces in an app name will have to be escaped e.g. QuickTime\ Player.app
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filetype *.pdf
       \ {Open in Preview}
       \ open -a Preview.app,
       \ {Open in Skim}
       \ open -a Skim.app,
fileviewer *.pdf pdftotext -nopgbrk %c -

" PostScript
filetype *.ps,*.eps open -a Preview.app

" Djvu
filetype *.djvu open -a MacDjView.app

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
       \ {Play using MPlayerX}
       \ open -a MPlayerX.app,
       \ {Open in iTunes}
       \ open -a iTunes.app,
       \ {Open in QuickTime Player}
       \ open -a QuickTime\ Player.app,
fileviewer *.mp3 mp3info
fileviewer *.flac soxi

" Video
filetype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
        \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
        \*.as[fx]
       \ {Open in VLC}
       \ open -a VLC.app,
       \ {Open in QuickTime Player}
       \ open -a QuickTime\ Player.app,
       \ {Open in MPlayerX}
       \ open -a MPlayerX.app,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
         \ ffprobe -pretty %c 2>&1

" Web
filetype *.html,*.htm
       \ {Open in Safari}
       \ open -a Safari.app,
       \ {Open in Firefox}
       \ open -a Firefox.app,
       \ {Open in Chrome}
       \ open -a Google\ Chrome.app,
       \ {Open in vim}
       \ vim,
fileviewer *.html,*.htm w3m -dump -T text/html

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Image
filetype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,
       \ open -a Preview.app,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
         \ identify %f

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" Torrent
filetype *.torrent open -a Transmission.app
fileviewer *.torrent dumptorrent -v %c

" Extract zip files
filetype *.zip unzip %f
fileviewer *.zip,*.jar,*.war,*.ear zip -sf %c

" Extract tar archives
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz tar -xf %f
fileviewer *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz tar -tf %f

" Extract .bz2 archives
filetype *.bz2 bzip2 -d %f

" Extract .gz files
filetype *.gz gunzip %f

" Mount .dmg archives
filetype *.dmg open

" Mount disk .img
filetype *.img open

" Open .pkg binaries
filetype *.pkg open

" Office files
filetype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt open -a LibreOffice.app
fileviewer *.doc antiword -
fileviewer *.docx docx2txt.pl %f -

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For OS X:
" filetype * open

" ------------------------------------------------------------------------------

" " file types
" set classify='üìÅ :dir:/,üöÄ :exe:,üìÑ :reg:,üîó :link:'
" " various file names
" set classify+='ÔÅ¢ ::../::,Óòî ::*.sh::,Óòù ::*.[hc]pp::,Óòû ::*.[hc]::,Ôáπ ::/^copying|license$/::,Ôáì ::.git/,,*.git/::,üìö ::*.epub,,*.fb2,,*.djvu::,üñ®Ô∏è ::*.pdf::,Ôëè ::*.htm,,*.html,,**.[sx]html,,*.xml::'
" " archives
" set classify+='üóÉÔ∏è ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'
" " images
" set classify+='üé®::*.bmp,,*.gif,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'
" " audio
" set classify+='üéß::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
" " media
" set classify+='üìº ::*.avi,,*.ts,,*.axv,,*.divx,,*.m2v,,*.m4p,,*.m4v,,.mka,,*.mkv,,*.mov,,*.mp4,,*.flv,,*.mp4v,,*.mpeg,,*.mpg,,*.nuv,,*.ogv,,*.pbm,,*.pgm,,*.qt,,*.vob,,*.wmv,,*.xvid::'
" " office files
" set classify+='üñπ ::*.doc,,*.docx::,ÔáÉ ::*.xls,,*.xls[mx]::,ÔáÑ ::*.pptx,,*.ppt::'

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Sample mappings

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in new MacVim tab
" nnoremap o :!mvim --remote-tab-silent %f<cr>
nnoremap o :!nvim  %f<cr>
" Open file in new MacVim window
" nnoremap O :!mvim %f<cr>

" Open file in the background using its default program
nnoremap gb :!open -g %f<cr>

" Yank current directory path into the clipboard
nnoremap yd :!printf %d | pbcopy<cr>

" Yank current file path into the clipboard
nnoremap yf :!printf %c:p | pbcopy<cr>

" View preview in Quick Look
nnoremap q :!qlmanage -p %f > /dev/null 2>&1<cr>
" Unhide builtin q* keymaps
nnoremap q: q:
nnoremap q/ q/
nnoremap q? q?
nnoremap q= q=

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>
" Open MacVim to edit vifmrc
" nnoremap ,C :!mvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
"
set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
"
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername

" Custom mappings

" Map - to go dir up
nnoremap - :cd ..<cr>

" Map <space> to toggle selection and go one line down
nnoremap <space> tj

" Map . to toggle hidden files
nnoremap . za

" Map <c-l> and <c-h> to tab (swithc the pane)
nnoremap <c-l> <tab>
" c-h is not working for some reason :(
nnoremap <c-h> <tab>

nnoremap ,tn :tabnew<cr>
nnoremap ,tc :tabclose<cr>
noremap <right> :tabnext<cr>
nnoremap <left> :tabprevious<cr>

" Find with default configuration errors out on OSX.
" See https://github.com/vifm/vifm/issues/947
set findprg='find %s %a'


" command! fzfcd :execute 'cd'
"          \ fnameescape(term('find -type d | fzf 2> /dev/tty'))

" https://q2a.vifm.info/156/use-external-program-to-find-and-select-a-file
command! fzf :execute '!fzf 2>&0 %%IU' | normal! gf
nnoremap ,f :fzf<cr>

" https://wiki.vifm.info/index.php/How_to_integrate_fzf_for_fuzzy_finding
" variation that automatically enters directories
command! FZFlocate : set noquickview
                  \| let $FZF_PICK = term('locate $HOME | fzf --height 10 2>/dev/tty')
                  \| if $FZF_PICK != ''
                  \|     execute system('[ -f "$FZF_PICK" ] && echo goto || echo cd') fnameescape($FZF_PICK)
                  \| endif
nnoremap ,d :FZFlocate<cr>

" See also fzf discussion here: https://github.com/vifm/vifm/issues/279

" command! gitTree :!git ls-files %u<cr> :tree<cr>
" 
"                                                               *vifm-%u*
"  %u        process command output as list of paths and compose custom view
"            out of it.
"                                                               *vifm-%U*
"  %U        same as %u, but implies less list updates inside vifm, which is
"            absence of sorting at the moment.
"                                                               *vifm-%Iu*
"  %Iu       same as %u, but gives up terminal before running external
"            %command.
"                                                               *vifm-%IU*
"  %IU       same as %U, but gives up terminal before running external
"            %command.
" See https://github.com/vifm/vifm/issues/541
nnoremap ,gg :!git ls-files %u<cr>:tree<cr>
nnoremap ,gs :!git ls-files --deleted --modified %u<cr>:tree<cr>

" Sort by size (use :tree after that to expand directories)
nnoremap ,s :%select<cr>ga:set sort=-size<cr>
