# Shell profile - export TERM=xterm-256color
# See: https://wiki.archlinux.org/index.php/Tmux#Setting_the_correct_term

# unbind C-b
#set -g prefix C-Space
#bind Space send-prefix
# set -g prefix C-a
# bind C-a send-prefix

# Basic setup
set status-utf8 on
set utf8 on

#  256 color support
set -g default-terminal "screen-256color"
# blueish
set -g status-bg colour153
# light purple
# set -g status-bg colour189
# light green
# set -g status-bg colour194
# light grey
# set -g status-bg colour255
set -g status-fg white

# Note: list colors with
# for i in {0..255} ; do
#    printf "\x1b[38;5;%smcolour%s\n" "${i}" "${i}"
# done

#set -g terminal-overrides 'xterm:colors=256'
# status bar settings
# set -g status-left-length 40
# set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# set -g status-right "#[fg=cyan]%d %b %R"
# set -g status-utf8 on
# set -g status-interval 60
# set -g status-justify centre

#  use zsh
set-option -g default-shell /bin/zsh
set -sg escape-time 0
#  start window numbers from 1
# set -g base-index 1
# set -g pane-base-index 1
#  see windows activity
setw -g monitor-activity on
set -g visual-activity on
#  use vi keys in copy mode
setw -g mode-keys vi

# Shortcuts
## Prefix CTRL-Space

## P d - detach
## P c - create new window (tab)
## P , - rename window
## P n / p - next/prev window
## P [1-9] - window N
## P f - find window
## P w - list of windows, also :list-windows
## P & - kill a window
## P <space> - change layout
## P : - command line
## P t - big clock
## P ? - list shortcuts

## P r - reload tmux config
## P I - reload tmux environment
## P h / j / k / l - select a pane
## P H / J - horizontal / vertical split (orig keys: % / ")
## P arrows - resize pane
## P C-H / C-L - move between windows

## Note: to move a window to another session:
## - Create a window in the target session: Prefix + c
## - If needed, :list-sessions and :list-windows to find the session and window
## - Move the window to the target session: Prefix + :move-window -t <target_session>:<target_window>
## - For example: :move-window -t 1:2

## Prefix + Space - enter copy mode
##   vim keys to move; 
##   v - start selection; 
##   y - copy and Prefix + y to copy to system clipboard
##   q - quit mode
## 
## Prefix + ] or Prefix + C-p to paste sys clipboard
##
bind Space copy-mode
bind C-Space copy-mode
bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind -T copy-mode-vi 'y' send-keys -X copy-selection

# > /dev/null is needed, see http://stackoverflow.com/questions/19101735/keyboard-shortcuts-in-tmux-deactivated-after-using-xclip
# without it after C-y other tmux keys doesn't work
#
#      1) select text (v + move cursor) 
#      2) copy it (y) 
#      3) use C-A C-y to
#
# get it to system clipboard
# bind C-y run "tmux show-buffer | xclip -i -sel clipboard  > /dev/null" \; display-message "Copied tmux buffer to system clipboard"
# Mac version (probably good to add some own system-dependent wrapper)
bind C-y run "tmux show-buffer | pbcopy -i > /dev/null" \; display-message "Copied tmux buffer to system clipboard"
bind C-p run "xclip -o -sel clipboard | tmux load-buffer - ; tmux paste-buffer"

bind r source-file ~/.tmux.conf \; display 'Reloaded .tmux.conf'

# panes and windows
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
#bind H split-window -h
#bind J split-window -v

bind j split-window -v
bind l split-window -h

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(n)?vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(n)?vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(n)?vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(n)?vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)(n)?vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# clear screen
#bind C-l send-keys 'C-l'

# To make Ctrl work with Left / Right / Up / Down
# (still doesn't work, maybe caught by zsh)
set-window-option -g xterm-keys on

# -r - repeatable binding
bind -r C-Left resize-pane -L 5
bind -r C-Down resize-pane -D 5
bind -r C-Up resize-pane -U 5
bind -r C-Right resize-pane -R 5

# quick windows cycling
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# :capture-pane - copy visible pane
# tmux show-buffer | :show-buffer - show copied text
# tmux capture-pane && tmux save-buffer buffer.txt
# Prefix + = - list copy buffers
#
# choose-buffer to chose active buffer
#
# Prefix + ! - pane->window
# join-pane -s 1 - window->pane, Take window 1 and join it to the current window
# join-pane -s 1.0 - grab the first pane of the first window and join it to our current window
#                    To take it a step further, we can even specify a source session, using the
#                    notation [session_name]:[window].[pane], and we can specify a target window using
#                    the -t flag using the same notation.

bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Will start copy mode on mouse grag, select text, press y to yank it
# Or use mouse with "Shift" to just copy text in terminal (no tmux copy mode).
set -g mouse on

# Plugins
# tmux plugin manager
# install with
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# tmux resurrect
#
# prefix + Ctrl-s - save tmux environment
# prefix + Ctrl-r - restore tmux environment
set -g @plugin "tmux-plugins/tmux-resurrect'"
# See also https://github.com/tmux-plugins/tmux-continuum to automatically save/restore
#
# Note: when there are multiple terminal windows with tmux'es, all are saved
# and when restored, there will be multiple sessions, the latest session will
# be restored in the current terminal window.
# Other sessions can be restored with tmux attach -t <session_name>.
# Use prefix + : and then list-sessions to see all sessions.

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
